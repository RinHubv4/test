local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Load Rayfield UI library
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Window = Rayfield:CreateWindow({
    Name = "PEPE",
    LoadingTitle = "Pepe",
    LoadingSubtitle = "Made by Pepe",
    Theme = "Default"
})

-- Pet Spawner Tab
local PetTab = Window:CreateTab("Pet Spawner", 136232391555861)
PetTab:CreateSection("Pet Spawner")

local petName = "Raccoon"
local petWeight = 1
local petAge = 1

PetTab:CreateInput({
    Name = "Pet Name",
    PlaceholderText = "Raccoon",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petName = value
    end
})

PetTab:CreateInput({
    Name = "Pet Weight",
    PlaceholderText = "1",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petWeight = tonumber(value) or 1
    end
})

PetTab:CreateInput({
    Name = "Pet Age",
    PlaceholderText = "1",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petAge = tonumber(value) or 1
    end
})

PetTab:CreateButton({
    Name = "Spawn",
    Callback = function()
        -- Access pet data from PetRegistry
        local success, petData = pcall(function()
            return require(ReplicatedStorage.Data.PetRegistry.PetList)[petName]
        end)

        if not success or not petData then
            warn("Pet not found in registry: " .. petName)
            return
        end

        -- Create a new pet instance
        local pet = Instance.new("Model")  -- Create a new model for the pet
        pet.Name = petName  -- Set the name of the pet

        -- Set pet properties
        local petWeightAttribute = Instance.new("NumberValue", pet)
        petWeightAttribute.Name = "Weight"
        petWeightAttribute.Value = petWeight

        local petAgeAttribute = Instance.new("NumberValue", pet)
        petAgeAttribute.Name = "Age"
        petAgeAttribute.Value = petAge

        -- Clone the pet model from ReplicatedStorage if it exists
        local petModel = ReplicatedStorage.PetModels:FindFirstChild(petName)  -- Corrected line
        if not petModel then
            warn("Pet model not found in ReplicatedStorage: " .. petName)
            return
        end

        local petClone = petModel:Clone()
        petClone.Parent = pet  -- Set the cloned model as a child of the pet model

        -- Check if the pet model has a PrimaryPart set
        if not petClone.PrimaryPart then
            warn("Pet model does not have a PrimaryPart set: " .. petName)
            return
        end

        -- Set the pet's position (for example, spawn it at the player's position)
        petClone:SetPrimaryPartCFrame(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0))  -- Spawn above the player

        -- Parent the pet to the workspace
        pet.Parent = game.Workspace

        print("Spawning pet: " .. petName .. ", Weight: " .. petWeight .. ", Age: " .. petAge)
    end
})

-- Seed Spawner Tab
local SeedTab = Window:CreateTab("Seed Spawner", 111869302762063)
SeedTab:CreateSection("Seed Spawner")

local seedName = ""

SeedTab:CreateInput({
    Name = "Seed Name",
    PlaceholderText = "Carrot",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        seedName = value
    end
})

SeedTab:CreateButton({
    Name = "Spawn",
    Callback = function()
        if not seedName or seedName == "" then
            warn("Please enter a valid seed name")
            return
        end

        -- Access seed data
        local seedData = require(ReplicatedStorage.Data.SeedData)[seedName]
        if not seedData then
            warn("Seed not found: " .. seedName)
            return
        end

        -- Create new Tool instance
        local tool = Instance.new("Tool")
        tool.Name = seedData.SeedName .. " [X" .. (tool:GetAttribute("Quantity") or 0) + 1 .. "]"
        tool:SetAttribute("ItemType", "Holdable")
        tool:SetAttribute("SeedName", seedName)
        tool:SetAttribute("Quantity", (tool:GetAttribute("Quantity") or 0) + 1)

        -- Clone seed model and set as handle
        local seedModel = ReplicatedStorage.Seed_Models:FindFirstChild(seedName)
        if seedModel then
            local handle = seedModel:Clone()
            handle.Name = "Handle"
            handle.Parent = tool
        else
            warn("Seed model not found: " .. seedName)
            return
        end

        -- Handle tool equipping for grip positioning
        tool.Equipped:Connect(function()
            local character = LocalPlayer.Character
            if character then
                local rightArm = character:WaitForChild("Right Arm")
                local rightGrip = rightArm:WaitForChild("RightGrip")
                rightGrip.C0 = CFrame.new(0, -1, 0, 1, 0, 0, 0, 0, 1, 0, -1, 0)
                rightGrip.C1 = CFrame.new(0.2, -0.448717117, 0.231557086, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            end
        end)

        -- Add tool to player's backpack
        tool.Parent = LocalPlayer.Backpack
        print("Spawned seed: " .. seedName)
    end
})
