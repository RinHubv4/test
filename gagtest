local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Load Rayfield UI library
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Window = Rayfield:CreateWindow({
    Name = "Pet & Seed Spawner",
    LoadingTitle = "Pet & Seed Spawner",
    LoadingSubtitle = "Made by whqtt",
    Theme = "Default" -- Clean, elegant UI per Default Design Guidelines
})

-- Pet Spawner Tab
local PetTab = Window:CreateTab("Pet Spawner", 136232391555861)
PetTab:CreateSection("Pet Spawner")

local petName = "Raccoon"
local petWeight = 1
local petAge = 1
local petQuantity = 1

PetTab:CreateInput({
    Name = "Pet Name",
    PlaceholderText = "Raccoon",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petName = value
    end
})

PetTab:CreateInput({
    Name = "Pet Weight",
    PlaceholderText = "1",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petWeight = tonumber(value) or 1
    end
})

PetTab:CreateInput({
    Name = "Pet Age",
    PlaceholderText = "1",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petAge = tonumber(value) or 1
    end
})

PetTab:CreateButton({
    Name = "Spawn",
    Callback = function()
        if not petName or petName == "" then
            warn("[PetSpawner] Please enter a valid pet name")
            return
        end

        -- Load pet data safely
        local success, petList = pcall(function()
            return require(ReplicatedStorage.Data.PetRegistry.PetList)
        end)

        if not success then
            warn("[PetSpawner] Failed to load PetList: " .. tostring(petList))
            return
        end

        local petData = petList[petName]
        if not petData then
            warn("[PetSpawner] Pet not found: " .. petName)
            return
        end

        -- Create new Tool instance for the pet, similar to seed spawning style
        local petTool = Instance.new("Tool")
        petQuantity = (petTool:GetAttribute("Quantity") or 0) + 1

        petTool.Name = petName .. " [X" .. petQuantity .. "]"
        petTool:SetAttribute("ItemType", "Holdable")
        petTool:SetAttribute("PetName", petName)
        petTool:SetAttribute("Weight", petWeight)
        petTool:SetAttribute("Age", petAge)
        petTool:SetAttribute("Quantity", petQuantity)

        -- Clone pet model and set as handle
        local petModelsFolder = ReplicatedStorage:FindFirstChild("Pet_Models")
        if not petModelsFolder then
            warn("[PetSpawner] Pet_Models folder not found in ReplicatedStorage.")
            return
        end

        local petModel = petModelsFolder:FindFirstChild(petName)
        if not petModel then
            warn("[PetSpawner] Pet model not found: " .. petName)
            return
        end

        local handle = petModel:Clone()
        handle.Name = "Handle"
        handle.Parent = petTool

        -- Optional: Set handle properties if needed for better grip/appearance

        -- Handle tool equipped event for grip positioning on right arm
        petTool.Equipped:Connect(function()
            local character = LocalPlayer.Character
            if character then
                local rightArm = character:WaitForChild("Right Arm", 5)
                if rightArm then
                    local rightGrip = rightArm:FindFirstChild("RightGrip") or rightArm:FindFirstChildWhichIsA("Motor6D")
                    if rightGrip then
                        rightGrip.C0 = CFrame.new(0, -1, 0, 1, 0, 0, 0, 0, 1, 0, -1, 0)
                        rightGrip.C1 = CFrame.new(0.2, -0.448717117, 0.231557086, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                    end
                end
            end
        end)

        -- Parent the pet tool to player's backpack
        petTool.Parent = LocalPlayer.Backpack

        print("[PetSpawner] Spawned pet tool: " .. petTool.Name)
    end
})

-- Seed Spawner Tab (unchanged, kept for consistency)
local SeedTab = Window:CreateTab("Seed Spawner", 111869302762063)
SeedTab:CreateSection("Seed Spawner")

local seedName = ""
local seedQuantity = 1

SeedTab:CreateInput({
    Name = "Seed Name",
    PlaceholderText = "Carrot",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        seedName = value
    end
})

SeedTab:CreateButton({
    Name = "Spawn",
    Callback = function()
        if not seedName or seedName == "" then
            warn("[SeedSpawner] Please enter a valid seed name")
            return
        end

        local seedData = require(ReplicatedStorage.Data.SeedData)[seedName]
        if not seedData then
            warn("[SeedSpawner] Seed not found: " .. seedName)
            return
        end

        local tool = Instance.new("Tool")
        seedQuantity = (tool:GetAttribute("Quantity") or 0) + 1

        tool.Name = seedData.SeedName .. " [X" .. seedQuantity .. "]"
        tool:SetAttribute("ItemType", "Holdable")
        tool:SetAttribute("SeedName", seedName)
        tool:SetAttribute("Quantity", seedQuantity)

        local seedModel = ReplicatedStorage.Seed_Models:FindFirstChild(seedName)
        if seedModel then
            local handle = seedModel:Clone()
            handle.Name = "Handle"
            handle.Parent = tool
        else
            warn("[SeedSpawner] Seed model not found: " .. seedName)
            return
        end

        tool.Equipped:Connect(function()
            local character = LocalPlayer.Character
            if character then
                local rightArm = character:WaitForChild("Right Arm", 5)
                if rightArm then
                    local rightGrip = rightArm:FindFirstChild("RightGrip") or rightArm:FindFirstChildWhichIsA("Motor6D")
                    if rightGrip then
                        rightGrip.C0 = CFrame.new(0, -1, 0, 1, 0, 0, 0, 0, 1, 0, -1, 0)
                        rightGrip.C1 = CFrame.new(0.2, -0.448717117, 0.231557086, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                    end
                end
            end
        end)

        tool.Parent = LocalPlayer.Backpack

        print("[SeedSpawner] Spawned seed tool: " .. tool.Name)
    end
})
