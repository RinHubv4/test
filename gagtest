local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local UIS = game:GetService("UserInputService")

local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "RinHub"
gui.ResetOnSpawn = false

local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 300, 0, 400)
main.Position = UDim2.new(0.5, -150, 0.5, -200)
main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
main.BorderSizePixel = 0
main.Active = true
main.Draggable = false

local UICorner = Instance.new("UICorner", main)
UICorner.CornerRadius = UDim.new(0, 8)

local UIStroke = Instance.new("UIStroke", main)
UIStroke.Color = Color3.fromRGB(255, 255, 255)
UIStroke.Thickness = 1

-- Title Bar
local titleBar = Instance.new("Frame", main)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
titleBar.BorderSizePixel = 0
titleBar.Name = "TitleBar"

local title = Instance.new("TextLabel", titleBar)
title.Size = UDim2.new(1, -60, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.Text = "Rin Hub"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextXAlignment = Enum.TextXAlignment.Left
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20

local exitButton = Instance.new("TextButton", titleBar)
exitButton.Size = UDim2.new(0, 30, 0, 30)
exitButton.Position = UDim2.new(1, -30, 0, 0)
exitButton.Text = "X"
exitButton.TextColor3 = Color3.fromRGB(255, 100, 100)
exitButton.BackgroundTransparency = 1
exitButton.Font = Enum.Font.SourceSansBold
exitButton.TextSize = 20

exitButton.MouseButton1Click:Connect(function()
    main:TweenSize(UDim2.new(0, 0, 0, 0), "Out", "Quad", 0.3, true, function()
        gui:Destroy()
    end)
end)

local minimizeButton = Instance.new("TextButton", titleBar)
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -60, 0, 0)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.BackgroundTransparency = 1
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 20

local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local targetSize = isMinimized and UDim2.new(0, 300, 0, 30) or UDim2.new(0, 300, 0, 400)
    main:TweenSize(targetSize, "Out", "Quad", 0.3, true)
end)

-- Dragging (Mobile + Desktop)
local dragging = false
local dragStart
local startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    main.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = main.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateDrag(input)
    end
end)

-- UI Elements
local usernameBox = Instance.new("TextBox", main)
usernameBox.Size = UDim2.new(0, 280, 0, 30)
usernameBox.Position = UDim2.new(0, 10, 0, 50)
usernameBox.PlaceholderText = "Enter Username"
usernameBox.Text = ""
usernameBox.TextColor3 = Color3.fromRGB(0, 0, 0)
usernameBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
usernameBox.Font = Enum.Font.SourceSans
usernameBox.TextSize = 18

local toggle = Instance.new("TextButton", main)
toggle.Size = UDim2.new(0, 280, 0, 30)
toggle.Position = UDim2.new(0, 10, 0, 90)
toggle.Text = "Auto Gift: OFF"
toggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
toggle.Font = Enum.Font.SourceSans
toggle.TextSize = 18

local toggled = false
toggle.MouseButton1Click:Connect(function()
    toggled = not toggled
    toggle.Text = toggled and "Auto Gift: ON" or "Auto Gift: OFF"
    toggle.BackgroundColor3 = toggled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(100, 100, 100)
end)

-- Duplicator Button
local multiplier = 1

local duplicator = Instance.new("TextButton", main)
duplicator.Size = UDim2.new(0, 280, 0, 30)
duplicator.Position = UDim2.new(0, 10, 0, 130)
duplicator.Text = "Duplicate Tool"
duplicator.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
duplicator.TextColor3 = Color3.fromRGB(255, 255, 255)
duplicator.Font = Enum.Font.SourceSans
duplicator.TextSize = 18

duplicator.MouseButton1Click:Connect(function()
    local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
    if tool and not tool.Name:lower():find("seed") then
        for i = 1, multiplier do
            local clone = tool:Clone()
            clone.Parent = player.Backpack
        end
    end
end)

-- Seed Spawner Section
local seedInput = Instance.new("TextBox", main)
seedInput.Size = UDim2.new(0, 280, 0, 30)
seedInput.Position = UDim2.new(0, 10, 0, 170)
seedInput.PlaceholderText = "Enter Seed Name"
seedInput.Text = ""
seedInput.TextColor3 = Color3.fromRGB(0, 0, 0)
seedInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
seedInput.Font = Enum.Font.SourceSans
seedInput.TextSize = 18

local spawnButton = Instance.new("TextButton", main)
spawnButton.Size = UDim2.new(0, 280, 0, 30)
spawnButton.Position = UDim2.new(0, 10, 0, 210)
spawnButton.Text = "Spawn Seed Tool"
spawnButton.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
spawnButton.TextColor3 = Color3.fromRGB(255, 255, 255)
spawnButton.Font = Enum.Font.SourceSans
spawnButton.TextSize = 18

spawnButton.MouseButton1Click:Connect(function()
    local seedName = seedInput.Text
    if seedName == "" then return end

    local dataFolder = game:GetService("ReplicatedStorage"):FindFirstChild("Data")
    local modelFolder = game:GetService("ReplicatedStorage"):FindFirstChild("Seed_Models")

    if not (dataFolder and modelFolder) then
        warn("Data folders not found.")
        return
    end

    local seedData = dataFolder.SeedData:FindFirstChild(seedName)
    local seedModel = modelFolder:FindFirstChild(seedName)

    if seedData and seedModel then
        for i = 1, multiplier do
            local tool = Instance.new("Tool")
            tool.Name = seedData.SeedName .. " [X1]"
            tool.RequiresHandle = false
            tool:SetAttribute("SeedName", seedData.SeedName)
            tool:SetAttribute("Quantity", 1)

            local handle = seedModel:Clone()
            handle.Name = "Handle"
            handle.Parent = tool
            tool.Parent = player.Backpack
        end
    else
        warn("Invalid seed name or missing data/model.")
    end
end)
